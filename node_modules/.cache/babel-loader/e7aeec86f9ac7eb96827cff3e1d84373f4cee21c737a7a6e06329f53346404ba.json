{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3001';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const todoService = {\n  // Obtener todas las tareas\n  async getAllTodos() {\n    try {\n      const response = await api.get('/todos');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n      throw error;\n    }\n  },\n  // Crear nueva tarea\n  async createTodo(todo) {\n    try {\n      const newTodo = {\n        ...todo,\n        id: Date.now(),\n        // Generamos un ID único\n        completed: false,\n        createdAt: new Date().toISOString()\n      };\n      const response = await api.post('/todos', newTodo);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating todo:', error);\n      throw error;\n    }\n  },\n  // Actualizar tarea\n  async updateTodo(id, updates) {\n    try {\n      const response = await api.patch(`/todos/${id}`, updates);\n      return response.data;\n    } catch (error) {\n      console.error('Error updating todo:', error);\n      throw error;\n    }\n  },\n  // Eliminar tarea\n  async deleteTodo(id) {\n    try {\n      await api.delete(`/todos/${id}`);\n      return id;\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n      throw error;\n    }\n  },\n  // Marcar tarea como completada/incompleta\n  async toggleTodo(id, completed) {\n    try {\n      const response = await api.patch(`/todos/${id}`, {\n        completed\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error toggling todo:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","todoService","getAllTodos","response","get","data","error","console","createTodo","todo","newTodo","id","Date","now","completed","createdAt","toISOString","post","updateTodo","updates","patch","deleteTodo","delete","toggleTodo"],"sources":["C:/Users/seama/OneDrive/Documents/App vue to-do list/src/services/todoService.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst API_URL = 'http://localhost:3001'\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n})\r\n\r\nexport const todoService = {\r\n  // Obtener todas las tareas\r\n  async getAllTodos() {\r\n    try {\r\n      const response = await api.get('/todos')\r\n      return response.data\r\n    } catch (error) {\r\n      console.error('Error fetching todos:', error)\r\n      throw error\r\n    }\r\n  },\r\n\r\n  // Crear nueva tarea\r\n  async createTodo(todo) {\r\n    try {\r\n      const newTodo = {\r\n        ...todo,\r\n        id: Date.now(), // Generamos un ID único\r\n        completed: false,\r\n        createdAt: new Date().toISOString()\r\n      }\r\n      const response = await api.post('/todos', newTodo)\r\n      return response.data\r\n    } catch (error) {\r\n      console.error('Error creating todo:', error)\r\n      throw error\r\n    }\r\n  },\r\n\r\n  // Actualizar tarea\r\n  async updateTodo(id, updates) {\r\n    try {\r\n      const response = await api.patch(`/todos/${id}`, updates)\r\n      return response.data\r\n    } catch (error) {\r\n      console.error('Error updating todo:', error)\r\n      throw error\r\n    }\r\n  },\r\n\r\n  // Eliminar tarea\r\n  async deleteTodo(id) {\r\n    try {\r\n      await api.delete(`/todos/${id}`)\r\n      return id\r\n    } catch (error) {\r\n      console.error('Error deleting todo:', error)\r\n      throw error\r\n    }\r\n  },\r\n\r\n  // Marcar tarea como completada/incompleta\r\n  async toggleTodo(id, completed) {\r\n    try {\r\n      const response = await api.patch(`/todos/${id}`, { completed })\r\n      return response.data\r\n    } catch (error) {\r\n      console.error('Error toggling todo:', error)\r\n      throw error\r\n    }\r\n  }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAG;EACzB;EACA,MAAMC,WAAWA,CAAA,EAAG;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,QAAQ,CAAC;MACxC,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAME,UAAUA,CAACC,IAAI,EAAE;IACrB,IAAI;MACF,MAAMC,OAAO,GAAG;QACd,GAAGD,IAAI;QACPE,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAAE;QAChBC,SAAS,EAAE,KAAK;QAChBC,SAAS,EAAE,IAAIH,IAAI,CAAC,CAAC,CAACI,WAAW,CAAC;MACpC,CAAC;MACD,MAAMb,QAAQ,GAAG,MAAMN,GAAG,CAACoB,IAAI,CAAC,QAAQ,EAAEP,OAAO,CAAC;MAClD,OAAOP,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMY,UAAUA,CAACP,EAAE,EAAEQ,OAAO,EAAE;IAC5B,IAAI;MACF,MAAMhB,QAAQ,GAAG,MAAMN,GAAG,CAACuB,KAAK,CAAC,UAAUT,EAAE,EAAE,EAAEQ,OAAO,CAAC;MACzD,OAAOhB,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMe,UAAUA,CAACV,EAAE,EAAE;IACnB,IAAI;MACF,MAAMd,GAAG,CAACyB,MAAM,CAAC,UAAUX,EAAE,EAAE,CAAC;MAChC,OAAOA,EAAE;IACX,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMiB,UAAUA,CAACZ,EAAE,EAAEG,SAAS,EAAE;IAC9B,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMN,GAAG,CAACuB,KAAK,CAAC,UAAUT,EAAE,EAAE,EAAE;QAAEG;MAAU,CAAC,CAAC;MAC/D,OAAOX,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}