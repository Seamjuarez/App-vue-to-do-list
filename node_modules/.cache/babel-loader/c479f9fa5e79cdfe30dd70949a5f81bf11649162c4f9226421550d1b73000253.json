{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  class: \"app-main\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TodoForm = _resolveComponent(\"TodoForm\");\n  const _component_TodoList = _resolveComponent(\"TodoList\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"header\", {\n    class: \"app-header\"\n  }, [_createElementVNode(\"h1\", null, \"üìù Mi Lista de Tareas\"), _createElementVNode(\"p\", {\n    class: \"subtitle\"\n  }, \"Gestiona tus tareas de forma eficiente\")], -1 /* HOISTED */)), _createElementVNode(\"main\", _hoisted_3, [_createCommentVNode(\" Mensaje de error \"), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"p\", null, \"‚ùå \" + _toDisplayString($data.error), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.retryConnection && $options.retryConnection(...args)),\n    class: \"retry-btn\"\n  }, \" üîÑ Reintentar conexi√≥n \")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Estado de conexi√≥n \"), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"connection-status\", {\n      offline: !$data.isOnline\n    }])\n  }, [$data.isOnline ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \"üü¢ Conectado a la API\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \"üî¥ Sin conexi√≥n a la API\"))], 2 /* CLASS */), _createCommentVNode(\" Formulario para agregar tareas \"), _createVNode(_component_TodoForm, {\n    onAddTodo: $options.addTodo\n  }, null, 8 /* PROPS */, [\"onAddTodo\"]), _createCommentVNode(\" Lista de tareas \"), _createVNode(_component_TodoList, {\n    todos: $data.todos,\n    loading: $data.loading,\n    onToggleTodo: $options.toggleTodo,\n    onDeleteTodo: $options.deleteTodo,\n    onUpdateTodo: $options.updateTodo,\n    onClearCompleted: $options.clearCompleted\n  }, null, 8 /* PROPS */, [\"todos\", \"loading\", \"onToggleTodo\", \"onDeleteTodo\", \"onUpdateTodo\", \"onClearCompleted\"])]), _cache[2] || (_cache[2] = _createElementVNode(\"footer\", {\n    class: \"app-footer\"\n  }, [_createElementVNode(\"p\", null, \" üí° Tip: Haz doble clic en una tarea para editarla \"), _createElementVNode(\"p\", {\n    class: \"credits\"\n  }, \" Desarrollado con Vue.js y json-server \")], -1 /* HOISTED */))])]);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createCommentVNode","$data","error","_hoisted_4","_toDisplayString","onClick","_cache","args","$options","retryConnection","_normalizeClass","offline","isOnline","_hoisted_5","_hoisted_6","_createVNode","_component_TodoForm","onAddTodo","addTodo","_component_TodoList","todos","loading","onToggleTodo","toggleTodo","onDeleteTodo","deleteTodo","onUpdateTodo","updateTodo","onClearCompleted","clearCompleted"],"sources":["C:\\Users\\seama\\OneDrive\\Documents\\App vue to-do list\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <div class=\"container\">\r\n      <header class=\"app-header\">\r\n        <h1>üìù Mi Lista de Tareas</h1>\r\n        <p class=\"subtitle\">Gestiona tus tareas de forma eficiente</p>\r\n      </header>\r\n\r\n      <main class=\"app-main\">\r\n        <!-- Mensaje de error -->\r\n        <div v-if=\"error\" class=\"error-message\">\r\n          <p>‚ùå {{ error }}</p>\r\n          <button @click=\"retryConnection\" class=\"retry-btn\">\r\n            üîÑ Reintentar conexi√≥n\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Estado de conexi√≥n -->\r\n        <div class=\"connection-status\" :class=\"{ offline: !isOnline }\">\r\n          <span v-if=\"isOnline\">üü¢ Conectado a la API</span>\r\n          <span v-else>üî¥ Sin conexi√≥n a la API</span>\r\n        </div>\r\n\r\n        <!-- Formulario para agregar tareas -->\r\n        <TodoForm @add-todo=\"addTodo\" />\r\n\r\n        <!-- Lista de tareas -->\r\n        <TodoList\r\n          :todos=\"todos\"\r\n          :loading=\"loading\"\r\n          @toggle-todo=\"toggleTodo\"\r\n          @delete-todo=\"deleteTodo\"\r\n          @update-todo=\"updateTodo\"\r\n          @clear-completed=\"clearCompleted\"\r\n        />\r\n      </main>\r\n\r\n      <footer class=\"app-footer\">\r\n        <p>\r\n          üí° Tip: Haz doble clic en una tarea para editarla\r\n        </p>\r\n        <p class=\"credits\">\r\n          Desarrollado con Vue.js y json-server\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TodoForm from './components/TodoForm.vue'\r\nimport TodoList from './components/TodoList.vue'\r\nimport { todoService } from './services/todoService'\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    TodoForm,\r\n    TodoList\r\n  },\r\n  data() {\r\n    return {\r\n      todos: [],\r\n      loading: false,\r\n      error: null,\r\n      isOnline: true\r\n    }\r\n  },\r\n  async created() {\r\n    await this.loadTodos()\r\n    this.checkConnection()\r\n  },\r\n  methods: {\r\n    async loadTodos() {\r\n      this.loading = true\r\n      this.error = null\r\n      try {\r\n        this.todos = await todoService.getAllTodos()\r\n        this.isOnline = true\r\n      } catch (error) {\r\n        this.error = 'No se pudo conectar con el servidor. Aseg√∫rate de que json-server est√© ejecut√°ndose.'\r\n        this.isOnline = false\r\n        console.error('Error loading todos:', error)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n\r\n    async addTodo(text) {\r\n      try {\r\n        const newTodo = await todoService.createTodo({ text })\r\n        this.todos.push(newTodo)\r\n        this.error = null\r\n        this.isOnline = true\r\n      } catch (error) {\r\n        this.error = 'Error al agregar la tarea'\r\n        this.isOnline = false\r\n        throw error\r\n      }\r\n    },\r\n\r\n    async toggleTodo(id) {\r\n      const todo = this.todos.find(t => t.id === id)\r\n      if (!todo) return\r\n\r\n      try {\r\n        const updatedTodo = await todoService.toggleTodo(id, !todo.completed)\r\n        const index = this.todos.findIndex(t => t.id === id)\r\n        this.todos[index] = updatedTodo\r\n        this.error = null\r\n        this.isOnline = true\r\n      } catch (error) {\r\n        this.error = 'Error al actualizar la tarea'\r\n        this.isOnline = false\r\n        console.error('Error toggling todo:', error)\r\n      }\r\n    },\r\n\r\n    async deleteTodo(id) {\r\n      try {\r\n        await todoService.deleteTodo(id)\r\n        this.todos = this.todos.filter(t => t.id !== id)\r\n        this.error = null\r\n        this.isOnline = true\r\n      } catch (error) {\r\n        this.error = 'Error al eliminar la tarea'\r\n        this.isOnline = false\r\n        console.error('Error deleting todo:', error)\r\n      }\r\n    },\r\n\r\n    async updateTodo(id, updates) {\r\n      try {\r\n        const updatedTodo = await todoService.updateTodo(id, updates)\r\n        const index = this.todos.findIndex(t => t.id === id)\r\n        this.todos[index] = updatedTodo\r\n        this.error = null\r\n        this.isOnline = true\r\n      } catch (error) {\r\n        this.error = 'Error al actualizar la tarea'\r\n        this.isOnline = false\r\n        console.error('Error updating todo:', error)\r\n      }\r\n    },\r\n\r\n    async clearCompleted() {\r\n      const completedTodos = this.todos.filter(t => t.completed)\r\n      \r\n      try {\r\n        // Eliminar todas las tareas completadas\r\n        await Promise.all(\r\n          completedTodos.map(todo => todoService.deleteTodo(todo.id))\r\n        )\r\n        \r\n        // Actualizar la lista local\r\n        this.todos = this.todos.filter(t => !t.completed)\r\n        this.error = null\r\n        this.isOnline = true\r\n      } catch (error) {\r\n        this.error = 'Error al eliminar tareas completadas'\r\n        this.isOnline = false\r\n        console.error('Error clearing completed todos:', error)\r\n      }\r\n    },\r\n\r\n    async retryConnection() {\r\n      await this.loadTodos()\r\n    },\r\n\r\n    checkConnection() {\r\n      // Verificar conexi√≥n cada 30 segundos\r\n      setInterval(async () => {\r\n        try {\r\n          await todoService.getAllTodos()\r\n          this.isOnline = true\r\n          if (this.error && this.error.includes('servidor')) {\r\n            this.error = null\r\n          }\r\n        } catch (error) {\r\n          this.isOnline = false\r\n        }\r\n      }, 30000)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  background-color: #f5f7fa;\r\n  color: #333;\r\n  line-height: 1.6;\r\n}\r\n\r\n#app {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n  padding: 20px;\r\n}\r\n\r\n.container {\r\n  width: 100%;\r\n  max-width: 800px;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\r\n  overflow: hidden;\r\n}\r\n\r\n.app-header {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  color: white;\r\n  padding: 40px;\r\n  text-align: center;\r\n}\r\n\r\n.app-header h1 {\r\n  font-size: 2.5rem;\r\n  margin-bottom: 8px;\r\n  font-weight: 700;\r\n}\r\n\r\n.subtitle {\r\n  font-size: 1.1rem;\r\n  opacity: 0.9;\r\n  margin: 0;\r\n}\r\n\r\n.app-main {\r\n  padding: 40px;\r\n}\r\n\r\n.connection-status {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 16px;\r\n  margin-bottom: 20px;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  background-color: #d4edda;\r\n  color: #155724;\r\n  border: 1px solid #c3e6cb;\r\n}\r\n\r\n.connection-status.offline {\r\n  background-color: #f8d7da;\r\n  color: #721c24;\r\n  border-color: #f5c6cb;\r\n}\r\n\r\n.error-message {\r\n  background-color: #f8d7da;\r\n  color: #721c24;\r\n  padding: 16px;\r\n  border-radius: 8px;\r\n  margin-bottom: 20px;\r\n  border: 1px solid #f5c6cb;\r\n  text-align: center;\r\n}\r\n\r\n.error-message p {\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.retry-btn {\r\n  background-color: #dc3545;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.retry-btn:hover {\r\n  background-color: #c82333;\r\n}\r\n\r\n.app-footer {\r\n  background-color: #f8f9fa;\r\n  padding: 20px 40px;\r\n  text-align: center;\r\n  border-top: 1px solid #e9ecef;\r\n  color: #6c757d;\r\n  font-size: 14px;\r\n}\r\n\r\n.app-footer p {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.credits {\r\n  font-size: 12px;\r\n  opacity: 0.8;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  #app {\r\n    padding: 10px;\r\n  }\r\n  \r\n  .container {\r\n    border-radius: 8px;\r\n  }\r\n  \r\n  .app-header {\r\n    padding: 30px 20px;\r\n  }\r\n  \r\n  .app-header h1 {\r\n    font-size: 2rem;\r\n  }\r\n  \r\n  .subtitle {\r\n    font-size: 1rem;\r\n  }\r\n  \r\n  .app-main {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .app-footer {\r\n    padding: 15px 20px;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .app-header h1 {\r\n    font-size: 1.8rem;\r\n  }\r\n  \r\n  .connection-status {\r\n    font-size: 12px;\r\n    padding: 6px 12px;\r\n  }\r\n}\r\n</style>"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;EACNC,KAAK,EAAC;AAAW;;EAMdA,KAAK,EAAC;AAAU;;;EAEFA,KAAK,EAAC;;;;;;;;;;;uBAT9BC,mBAAA,CA6CM,OA7CNC,UA6CM,GA5CJC,mBAAA,CA2CM,OA3CNC,UA2CM,G,0BA1CJD,mBAAA,CAGS;IAHDH,KAAK,EAAC;EAAY,IACxBG,mBAAA,CAA8B,YAA1B,uBAAqB,GACzBA,mBAAA,CAA8D;IAA3DH,KAAK,EAAC;EAAU,GAAC,wCAAsC,E,sBAG5DG,mBAAA,CA2BO,QA3BPE,UA2BO,GA1BLC,mBAAA,sBAAyB,EACdC,KAAA,CAAAC,KAAK,I,cAAhBP,mBAAA,CAKM,OALNQ,UAKM,GAJJN,mBAAA,CAAoB,WAAjB,IAAE,GAAAO,gBAAA,CAAGH,KAAA,CAAAC,KAAK,kBACbL,mBAAA,CAES;IAFAQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,eAAA,IAAAD,QAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;IAAEb,KAAK,EAAC;KAAY,0BAEnD,E,wCAGFM,mBAAA,wBAA2B,EAC3BH,mBAAA,CAGM;IAHDH,KAAK,EAAAgB,eAAA,EAAC,mBAAmB;MAAAC,OAAA,GAAqBV,KAAA,CAAAW;IAAQ;MAC7CX,KAAA,CAAAW,QAAQ,I,cAApBjB,mBAAA,CAAkD,QAAAkB,UAAA,EAA5B,uBAAqB,M,cAC3ClB,mBAAA,CAA4C,QAAAmB,UAAA,EAA/B,0BAAwB,G,kBAGvCd,mBAAA,oCAAuC,EACvCe,YAAA,CAAgCC,mBAAA;IAArBC,SAAQ,EAAET,QAAA,CAAAU;EAAO,wCAE5BlB,mBAAA,qBAAwB,EACxBe,YAAA,CAOEI,mBAAA;IANCC,KAAK,EAAEnB,KAAA,CAAAmB,KAAK;IACZC,OAAO,EAAEpB,KAAA,CAAAoB,OAAO;IAChBC,YAAW,EAAEd,QAAA,CAAAe,UAAU;IACvBC,YAAW,EAAEhB,QAAA,CAAAiB,UAAU;IACvBC,YAAW,EAAElB,QAAA,CAAAmB,UAAU;IACvBC,gBAAe,EAAEpB,QAAA,CAAAqB;iJAItBhC,mBAAA,CAOS;IAPDH,KAAK,EAAC;EAAY,IACxBG,mBAAA,CAEI,WAFD,qDAEH,GACAA,mBAAA,CAEI;IAFDH,KAAK,EAAC;EAAS,GAAC,yCAEnB,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}