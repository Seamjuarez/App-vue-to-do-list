{"ast":null,"code":"import TodoForm from './components/TodoForm.vue';\nimport TodoList from './components/TodoList.vue';\nimport { todoService } from './services/todoService';\nexport default {\n  name: 'App',\n  components: {\n    TodoForm,\n    TodoList\n  },\n  data() {\n    return {\n      todos: [],\n      loading: false,\n      error: null,\n      isOnline: true\n    };\n  },\n  async created() {\n    await this.loadTodos();\n    this.checkConnection();\n  },\n  methods: {\n    async loadTodos() {\n      this.loading = true;\n      this.error = null;\n      try {\n        this.todos = await todoService.getAllTodos();\n        this.isOnline = true;\n      } catch (error) {\n        this.error = 'No se pudo conectar con el servidor. Aseg√∫rate de que json-server est√© ejecut√°ndose.';\n        this.isOnline = false;\n        console.error('Error loading todos:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async addTodo(text) {\n      try {\n        const newTodo = await todoService.createTodo({\n          text\n        });\n        this.todos.push(newTodo);\n        this.error = null;\n        this.isOnline = true;\n      } catch (error) {\n        this.error = 'Error al agregar la tarea';\n        this.isOnline = false;\n        throw error;\n      }\n    },\n    async toggleTodo(id) {\n      const todo = this.todos.find(t => t.id === id);\n      if (!todo) return;\n      try {\n        const updatedTodo = await todoService.toggleTodo(id, !todo.completed);\n        const index = this.todos.findIndex(t => t.id === id);\n        this.todos[index] = updatedTodo;\n        this.error = null;\n        this.isOnline = true;\n      } catch (error) {\n        this.error = 'Error al actualizar la tarea';\n        this.isOnline = false;\n        console.error('Error toggling todo:', error);\n      }\n    },\n    async deleteTodo(id) {\n      try {\n        await todoService.deleteTodo(id);\n        this.todos = this.todos.filter(t => t.id !== id);\n        this.error = null;\n        this.isOnline = true;\n      } catch (error) {\n        this.error = 'Error al eliminar la tarea';\n        this.isOnline = false;\n        console.error('Error deleting todo:', error);\n      }\n    },\n    async updateTodo(id, updates) {\n      try {\n        const updatedTodo = await todoService.updateTodo(id, updates);\n        const index = this.todos.findIndex(t => t.id === id);\n        this.todos[index] = updatedTodo;\n        this.error = null;\n        this.isOnline = true;\n      } catch (error) {\n        this.error = 'Error al actualizar la tarea';\n        this.isOnline = false;\n        console.error('Error updating todo:', error);\n      }\n    },\n    async clearCompleted() {\n      const completedTodos = this.todos.filter(t => t.completed);\n      try {\n        // Eliminar todas las tareas completadas\n        await Promise.all(completedTodos.map(todo => todoService.deleteTodo(todo.id)));\n\n        // Actualizar la lista local\n        this.todos = this.todos.filter(t => !t.completed);\n        this.error = null;\n        this.isOnline = true;\n      } catch (error) {\n        this.error = 'Error al eliminar tareas completadas';\n        this.isOnline = false;\n        console.error('Error clearing completed todos:', error);\n      }\n    },\n    async retryConnection() {\n      await this.loadTodos();\n    },\n    checkConnection() {\n      // Verificar conexi√≥n cada 30 segundos\n      setInterval(async () => {\n        try {\n          await todoService.getAllTodos();\n          this.isOnline = true;\n          if (this.error && this.error.includes('servidor')) {\n            this.error = null;\n          }\n        } catch (error) {\n          this.isOnline = false;\n        }\n      }, 30000);\n    }\n  }\n};","map":{"version":3,"names":["TodoForm","TodoList","todoService","name","components","data","todos","loading","error","isOnline","created","loadTodos","checkConnection","methods","getAllTodos","console","addTodo","text","newTodo","createTodo","push","toggleTodo","id","todo","find","t","updatedTodo","completed","index","findIndex","deleteTodo","filter","updateTodo","updates","clearCompleted","completedTodos","Promise","all","map","retryConnection","setInterval","includes"],"sources":["C:\\Users\\seama\\OneDrive\\Documents\\App vue to-do list\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <div class=\"container\">\r\n      <header class=\"app-header\">\r\n        <h1>üìù Mi Lista de Tareas</h1>\r\n        <p class=\"subtitle\">Gestiona tus tareas de forma eficiente</p>\r\n      </header>\r\n\r\n      <main class=\"app-main\">\r\n        <!-- Mensaje de error -->\r\n        <div v-if=\"error\" class=\"error-message\">\r\n          <p>‚ùå {{ error }}</p>\r\n          <button @click=\"retryConnection\" class=\"retry-btn\">\r\n            üîÑ Reintentar conexi√≥n\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Estado de conexi√≥n -->\r\n        <div class=\"connection-status\" :class=\"{ offline: !isOnline }\">\r\n          <span v-if=\"isOnline\">üü¢ Conectado a la API</span>\r\n          <span v-else>üî¥ Sin conexi√≥n a la API</span>\r\n        </div>\r\n\r\n        <!-- Formulario para agregar tareas -->\r\n        <TodoForm @add-todo=\"addTodo\" />\r\n\r\n        <!-- Lista de tareas -->\r\n        <TodoList\r\n          :todos=\"todos\"\r\n          :loading=\"loading\"\r\n          @toggle-todo=\"toggleTodo\"\r\n          @delete-todo=\"deleteTodo\"\r\n          @update-todo=\"updateTodo\"\r\n          @clear-completed=\"clearCompleted\"\r\n        />\r\n      </main>\r\n\r\n      <footer class=\"app-footer\">\r\n        <p>\r\n          üí° Tip: Haz doble clic en una tarea para editarla\r\n        </p>\r\n        <p class=\"credits\">\r\n          Desarrollado con Vue.js y json-server\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TodoForm from './components/TodoForm.vue'\r\nimport TodoList from './components/TodoList.vue'\r\nimport { todoService } from './services/todoService'\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    TodoForm,\r\n    TodoList\r\n  },\r\n  data() {\r\n    return {\r\n      todos: [],\r\n      loading: false,\r\n      error: null,\r\n      isOnline: true\r\n    }\r\n  },\r\n  async created() {\r\n    await this.loadTodos()\r\n    this.checkConnection()\r\n  },\r\n  methods: {\r\n    async loadTodos() {\r\n      this.loading = true\r\n      this.error = null\r\n      try {\r\n        this.todos = await todoService.getAllTodos()\r\n        this.isOnline = true\r\n      } catch (error) {\r\n        this.error = 'No se pudo conectar con el servidor. Aseg√∫rate de que json-server est√© ejecut√°ndose.'\r\n        this.isOnline = false\r\n        console.error('Error loading todos:', error)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n\r\n    async addTodo(text) {\r\n      try {\r\n        const newTodo = await todoService.createTodo({ text })\r\n        this.todos.push(newTodo)\r\n        this.error = null\r\n        this.isOnline = true\r\n      } catch (error) {\r\n        this.error = 'Error al agregar la tarea'\r\n        this.isOnline = false\r\n        throw error\r\n      }\r\n    },\r\n\r\n    async toggleTodo(id) {\r\n      const todo = this.todos.find(t => t.id === id)\r\n      if (!todo) return\r\n\r\n      try {\r\n        const updatedTodo = await todoService.toggleTodo(id, !todo.completed)\r\n        const index = this.todos.findIndex(t => t.id === id)\r\n        this.todos[index] = updatedTodo\r\n        this.error = null\r\n        this.isOnline = true\r\n      } catch (error) {\r\n        this.error = 'Error al actualizar la tarea'\r\n        this.isOnline = false\r\n        console.error('Error toggling todo:', error)\r\n      }\r\n    },\r\n\r\n    async deleteTodo(id) {\r\n      try {\r\n        await todoService.deleteTodo(id)\r\n        this.todos = this.todos.filter(t => t.id !== id)\r\n        this.error = null\r\n        this.isOnline = true\r\n      } catch (error) {\r\n        this.error = 'Error al eliminar la tarea'\r\n        this.isOnline = false\r\n        console.error('Error deleting todo:', error)\r\n      }\r\n    },\r\n\r\n    async updateTodo(id, updates) {\r\n      try {\r\n        const updatedTodo = await todoService.updateTodo(id, updates)\r\n        const index = this.todos.findIndex(t => t.id === id)\r\n        this.todos[index] = updatedTodo\r\n        this.error = null\r\n        this.isOnline = true\r\n      } catch (error) {\r\n        this.error = 'Error al actualizar la tarea'\r\n        this.isOnline = false\r\n        console.error('Error updating todo:', error)\r\n      }\r\n    },\r\n\r\n    async clearCompleted() {\r\n      const completedTodos = this.todos.filter(t => t.completed)\r\n      \r\n      try {\r\n        // Eliminar todas las tareas completadas\r\n        await Promise.all(\r\n          completedTodos.map(todo => todoService.deleteTodo(todo.id))\r\n        )\r\n        \r\n        // Actualizar la lista local\r\n        this.todos = this.todos.filter(t => !t.completed)\r\n        this.error = null\r\n        this.isOnline = true\r\n      } catch (error) {\r\n        this.error = 'Error al eliminar tareas completadas'\r\n        this.isOnline = false\r\n        console.error('Error clearing completed todos:', error)\r\n      }\r\n    },\r\n\r\n    async retryConnection() {\r\n      await this.loadTodos()\r\n    },\r\n\r\n    checkConnection() {\r\n      // Verificar conexi√≥n cada 30 segundos\r\n      setInterval(async () => {\r\n        try {\r\n          await todoService.getAllTodos()\r\n          this.isOnline = true\r\n          if (this.error && this.error.includes('servidor')) {\r\n            this.error = null\r\n          }\r\n        } catch (error) {\r\n          this.isOnline = false\r\n        }\r\n      }, 30000)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  background-color: #f5f7fa;\r\n  color: #333;\r\n  line-height: 1.6;\r\n}\r\n\r\n#app {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n  padding: 20px;\r\n}\r\n\r\n.container {\r\n  width: 100%;\r\n  max-width: 800px;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\r\n  overflow: hidden;\r\n}\r\n\r\n.app-header {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  color: white;\r\n  padding: 40px;\r\n  text-align: center;\r\n}\r\n\r\n.app-header h1 {\r\n  font-size: 2.5rem;\r\n  margin-bottom: 8px;\r\n  font-weight: 700;\r\n}\r\n\r\n.subtitle {\r\n  font-size: 1.1rem;\r\n  opacity: 0.9;\r\n  margin: 0;\r\n}\r\n\r\n.app-main {\r\n  padding: 40px;\r\n}\r\n\r\n.connection-status {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 16px;\r\n  margin-bottom: 20px;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  background-color: #d4edda;\r\n  color: #155724;\r\n  border: 1px solid #c3e6cb;\r\n}\r\n\r\n.connection-status.offline {\r\n  background-color: #f8d7da;\r\n  color: #721c24;\r\n  border-color: #f5c6cb;\r\n}\r\n\r\n.error-message {\r\n  background-color: #f8d7da;\r\n  color: #721c24;\r\n  padding: 16px;\r\n  border-radius: 8px;\r\n  margin-bottom: 20px;\r\n  border: 1px solid #f5c6cb;\r\n  text-align: center;\r\n}\r\n\r\n.error-message p {\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.retry-btn {\r\n  background-color: #dc3545;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.retry-btn:hover {\r\n  background-color: #c82333;\r\n}\r\n\r\n.app-footer {\r\n  background-color: #f8f9fa;\r\n  padding: 20px 40px;\r\n  text-align: center;\r\n  border-top: 1px solid #e9ecef;\r\n  color: #6c757d;\r\n  font-size: 14px;\r\n}\r\n\r\n.app-footer p {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.credits {\r\n  font-size: 12px;\r\n  opacity: 0.8;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  #app {\r\n    padding: 10px;\r\n  }\r\n  \r\n  .container {\r\n    border-radius: 8px;\r\n  }\r\n  \r\n  .app-header {\r\n    padding: 30px 20px;\r\n  }\r\n  \r\n  .app-header h1 {\r\n    font-size: 2rem;\r\n  }\r\n  \r\n  .subtitle {\r\n    font-size: 1rem;\r\n  }\r\n  \r\n  .app-main {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .app-footer {\r\n    padding: 15px 20px;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .app-header h1 {\r\n    font-size: 1.8rem;\r\n  }\r\n  \r\n  .connection-status {\r\n    font-size: 12px;\r\n    padding: 6px 12px;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}