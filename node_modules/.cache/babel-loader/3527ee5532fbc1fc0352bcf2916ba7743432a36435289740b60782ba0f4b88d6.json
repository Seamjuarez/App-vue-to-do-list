{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"todo-list\"\n};\nconst _hoisted_2 = {\n  class: \"list-header\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  class: \"filters\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"loading\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"empty-state\"\n};\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = {\n  key: 1\n};\nconst _hoisted_9 = {\n  key: 2,\n  class: \"todos\"\n};\nconst _hoisted_10 = {\n  key: 3,\n  class: \"list-actions\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TodoItem = _resolveComponent(\"TodoItem\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h3\", null, [_createTextVNode(_toDisplayString($options.filteredTodos.length) + \" \" + _toDisplayString($options.filteredTodos.length === 1 ? 'tarea' : 'tareas') + \" \", 1 /* TEXT */), $data.filter !== 'all' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString($data.filter === 'active' ? 'pendientes' : 'completadas'), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.setFilter('all')),\n    class: _normalizeClass([{\n      active: $data.filter === 'all'\n    }, \"filter-btn\"])\n  }, \" Todas (\" + _toDisplayString($props.todos.length) + \") \", 3 /* TEXT, CLASS */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.setFilter('active')),\n    class: _normalizeClass([{\n      active: $data.filter === 'active'\n    }, \"filter-btn\"])\n  }, \" Pendientes (\" + _toDisplayString($options.activeTodos) + \") \", 3 /* TEXT, CLASS */), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.setFilter('completed')),\n    class: _normalizeClass([{\n      active: $data.filter === 'completed'\n    }, \"filter-btn\"])\n  }, \" Completadas (\" + _toDisplayString($options.completedTodos) + \") \", 3 /* TEXT, CLASS */)])]), $props.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _cache[4] || (_cache[4] = [_createElementVNode(\"p\", null, \"‚è≥ Cargando tareas...\", -1 /* HOISTED */)]))) : $options.filteredTodos.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [$props.todos.length === 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \" üìù No hay tareas a√∫n. ¬°Agrega tu primera tarea! \")) : (_openBlock(), _createElementBlock(\"p\", _hoisted_8, \" üéØ No hay tareas \" + _toDisplayString($data.filter === 'active' ? 'pendientes' : 'completadas'), 1 /* TEXT */))])) : (_openBlock(), _createElementBlock(\"ul\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredTodos, todo => {\n    return _openBlock(), _createBlock(_component_TodoItem, {\n      key: todo.id,\n      todo: todo,\n      onToggle: $options.toggleTodo,\n      onDelete: $options.deleteTodo,\n      onUpdate: $options.updateTodo\n    }, null, 8 /* PROPS */, [\"todo\", \"onToggle\", \"onDelete\", \"onUpdate\"]);\n  }), 128 /* KEYED_FRAGMENT */))])), $options.completedTodos > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.clearCompleted && $options.clearCompleted(...args)),\n    class: \"clear-btn\"\n  }, \" üóëÔ∏è Eliminar completadas (\" + _toDisplayString($options.completedTodos) + \") \", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$options","filteredTodos","length","_toDisplayString","$data","filter","_hoisted_3","_hoisted_4","onClick","_cache","$event","setFilter","_normalizeClass","active","$props","todos","activeTodos","completedTodos","loading","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_Fragment","_renderList","todo","_createBlock","_component_TodoItem","key","id","onToggle","toggleTodo","onDelete","deleteTodo","onUpdate","updateTodo","_hoisted_10","args","clearCompleted"],"sources":["C:\\Users\\seama\\OneDrive\\Documents\\App vue to-do list\\src\\components\\TodoList.vue"],"sourcesContent":["<template>\r\n  <div class=\"todo-list\">\r\n    <div class=\"list-header\">\r\n      <h3>\r\n        {{ filteredTodos.length }} \r\n        {{ filteredTodos.length === 1 ? 'tarea' : 'tareas' }}\r\n        <span v-if=\"filter !== 'all'\">\r\n          {{ filter === 'active' ? 'pendientes' : 'completadas' }}\r\n        </span>\r\n      </h3>\r\n      <div class=\"filters\">\r\n        <button\r\n          @click=\"setFilter('all')\"\r\n          :class=\"{ active: filter === 'all' }\"\r\n          class=\"filter-btn\"\r\n        >\r\n          Todas ({{ todos.length }})\r\n        </button>\r\n        <button\r\n          @click=\"setFilter('active')\"\r\n          :class=\"{ active: filter === 'active' }\"\r\n          class=\"filter-btn\"\r\n        >\r\n          Pendientes ({{ activeTodos }})\r\n        </button>\r\n        <button\r\n          @click=\"setFilter('completed')\"\r\n          :class=\"{ active: filter === 'completed' }\"\r\n          class=\"filter-btn\"\r\n        >\r\n          Completadas ({{ completedTodos }})\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"loading\" class=\"loading\">\r\n      <p>‚è≥ Cargando tareas...</p>\r\n    </div>\r\n\r\n    <div v-else-if=\"filteredTodos.length === 0\" class=\"empty-state\">\r\n      <p v-if=\"todos.length === 0\">\r\n        üìù No hay tareas a√∫n. ¬°Agrega tu primera tarea!\r\n      </p>\r\n      <p v-else>\r\n        üéØ No hay tareas {{ filter === 'active' ? 'pendientes' : 'completadas' }}\r\n      </p>\r\n    </div>\r\n\r\n    <ul v-else class=\"todos\">\r\n      <TodoItem\r\n        v-for=\"todo in filteredTodos\"\r\n        :key=\"todo.id\"\r\n        :todo=\"todo\"\r\n        @toggle=\"toggleTodo\"\r\n        @delete=\"deleteTodo\"\r\n        @update=\"updateTodo\"\r\n      />\r\n    </ul>\r\n\r\n    <div v-if=\"completedTodos > 0\" class=\"list-actions\">\r\n      <button @click=\"clearCompleted\" class=\"clear-btn\">\r\n        üóëÔ∏è Eliminar completadas ({{ completedTodos }})\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TodoItem from './TodoItem.vue'\r\n\r\nexport default {\r\n  name: 'TodoList',\r\n  components: {\r\n    TodoItem\r\n  },\r\n  props: {\r\n    todos: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    loading: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  emits: ['toggle-todo', 'delete-todo', 'update-todo', 'clear-completed'],\r\n  data() {\r\n    return {\r\n      filter: 'all'\r\n    }\r\n  },\r\n  computed: {\r\n    filteredTodos() {\r\n      switch (this.filter) {\r\n        case 'active':\r\n          return this.todos.filter(todo => !todo.completed)\r\n        case 'completed':\r\n          return this.todos.filter(todo => todo.completed)\r\n        default:\r\n          return this.todos\r\n      }\r\n    },\r\n    activeTodos() {\r\n      return this.todos.filter(todo => !todo.completed).length\r\n    },\r\n    completedTodos() {\r\n      return this.todos.filter(todo => todo.completed).length\r\n    }\r\n  },\r\n  methods: {\r\n    setFilter(filter) {\r\n      this.filter = filter\r\n    },\r\n    toggleTodo(id) {\r\n      this.$emit('toggle-todo', id)\r\n    },\r\n    deleteTodo(id) {\r\n      this.$emit('delete-todo', id)\r\n    },\r\n    updateTodo(id, updates) {\r\n      this.$emit('update-todo', id, updates)\r\n    },\r\n    clearCompleted() {\r\n      if (confirm(`¬øEliminar ${this.completedTodos} tareas completadas?`)) {\r\n        this.$emit('clear-completed')\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.todo-list {\r\n  width: 100%;\r\n}\r\n\r\n.list-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 16px;\r\n  border-bottom: 2px solid #e9ecef;\r\n}\r\n\r\n.list-header h3 {\r\n  margin: 0;\r\n  color: #495057;\r\n  font-size: 18px;\r\n}\r\n\r\n.filters {\r\n  display: flex;\r\n  gap: 8px;\r\n}\r\n\r\n.filter-btn {\r\n  padding: 6px 12px;\r\n  border: 1px solid #dee2e6;\r\n  background-color: white;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.filter-btn:hover {\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.filter-btn.active {\r\n  background-color: #007bff;\r\n  color: white;\r\n  border-color: #007bff;\r\n}\r\n\r\n.loading {\r\n  text-align: center;\r\n  padding: 40px;\r\n  color: #6c757d;\r\n  font-size: 16px;\r\n}\r\n\r\n.empty-state {\r\n  text-align: center;\r\n  padding: 40px;\r\n  color: #6c757d;\r\n  font-size: 16px;\r\n  background-color: #f8f9fa;\r\n  border-radius: 8px;\r\n  border: 2px dashed #dee2e6;\r\n}\r\n\r\n.todos {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.list-actions {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.clear-btn {\r\n  padding: 8px 16px;\r\n  background-color: #dc3545;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.clear-btn:hover {\r\n  background-color: #c82333;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .list-header {\r\n    flex-direction: column;\r\n    gap: 16px;\r\n    align-items: stretch;\r\n  }\r\n  \r\n  .filters {\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n  }\r\n  \r\n  .filter-btn {\r\n    font-size: 12px;\r\n    padding: 4px 8px;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}